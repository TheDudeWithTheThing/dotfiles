alias ag='ag --ignore=tags'
alias agi='ag'
alias boi='bower install'
alias cache_clear='heroku run rails runner -e production Rails.cache.clear'
alias canary="/Applications/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary --allow-file-access-from-files"
alias chrome="open -a \"Google Chrome\""
alias es='env | sort'
alias fs='foreman s'
alias gs='gss'
alias gw='grunt watch'
alias hide_hidden='defaults write com.apple.finder AppleShowAllFiles NO; killall Finder'
alias hl='history | less'
alias make_erd='bundle exec erd --inheritance --filetype=dot --direct --attributes=foreign_keys,content; dot -Tpng erd.dot > erd.png; rm erd.dot'
alias mou='open -a Mou'
alias mount_chubs='hdiutil attach /Users/employee/Google\ Drive/Chubs.dmg -stdinpass'
alias mount_important='hdiutil attach ~/Dropbox/ImportantStuff.dmg -stdinpass'
alias nombom='rm -rf node_modules bower_components && npm install && bower install'
alias ni='npm install'
alias nshrink='rm npm-shrinkwrap.json && npm shrinkwrap'
alias print_zpl='lp -o raw -d ZebraZP505'
alias pry='pry -r ./config/environment'
alias s3='s3cmd'
alias show_hidden='defaults write com.apple.finder AppleShowAllFiles YES; killall Finder'
alias sr='spring rspec'
alias ss='spring stop'
alias start_mongo='mongod --config /usr/local/etc/mongod.conf'
alias top_commands='history | awk '\''{a[$2]++}END{for(i in a){print a[i] " " i}}'\'' | sort -rn | head'
alias undeployed="heroku releases -a blueapron | sed -n 2p | cut -d' ' -f4 | xargs -J % git log --oneline --decorate --color --graph master --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --not %"
alias v='mvim .'
alias V='mvim'
alias vbrestart="sudo /Library/StartupItems/VirtualBox/VirtualBox restart"
alias vimrc='mvim -O ~/.dotfiles/vimrc -O ~/.dotfiles/vim/mappings.vim -O ~/.dotfiles/vim/bundle.vim'

#ember
alias e='ember'
alias eb='ember build'
alias edd='ember deploy development --verbose --activate=true'
alias eds='ember deploy staging --verbose --activate'
alias et='ember test'
alias ets='ember test -s'
alias embers='ember server --watcher=polling'

# rake
alias rdm='rake db:migrate'
alias rdr='rake db:rollback'
alias rsa='rake spec:all'
alias test_migrate='spring stop; RAILS_ENV=test rake db:drop db:create db:structure:load'

# BA
alias ba_restore='pg_restore --host localhost --port 5432 --dbname "blueapron_development" --jobs=2 --role "blueapron" --no-password  --section pre-data --section data --section post-data --clean --verbose'
alias wms_restore='pg_restore --host localhost --port 5432 --dbname "wms_development" --role "blueapron" --no-password  --section pre-data --section data --section post-data --clean --verbose --jobs=4'

# rubocop 
alias rbc='bundle exec rubocop -D $(git diff --name-only master..HEAD)'
alias rcof='rubocop -f o'
alias rcon='rubocop --only'
alias rgo='rubocop -a --only'
alias rubopry='rubocop --only Debugger'

# git
alias g='git'
alias deploy_prep='ggpull && gcm && ggpull && gco - && grbm'
alias gap='git add --patch'
alias gasc='git add db/structure.sql && grbc'
alias gfp='git fetch --prune'
alias glw="git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --since='8 days ago' --"
alias gmnf='git merge --no-ff'
alias gpb='git branch --merged | grep -v "\*" | grep -v "master" | xargs -n 1 git branch -d'
alias gpbd='git branch --merged | grep -v "\*" | grep -v "master"'
alias grbm='git rebase master'
alias grbs='git rebase --skip'
alias gsh='git show'
alias gsl='git stash list'
alias wms_prod_deploy="git push wms-prod master:master && gp"

# heroku
alias ba_deploylog='echo "https://github.com/blueapron/blueapron.com/compare/$(heroku releases -ablueapron -n1 | grep "Deploy" | cut -d" " -f4)...master" | pbcopy && open $(pbpaste)'
alias h='heroku'
alias hrr='heroku run rake'
alias hrrc='heroku run rails c'
alias hrrda='heroku run rake data:migrate'
alias hrrdb='heroku run rake db:migrate'
alias wms_deploylog='echo "https://github.com/blueapron/wms-server/compare/$(heroku releases -a ba-wms -n1 | grep "Deploy" | cut -d" " -f4)...master" | pbcopy && open $(pbpaste)'
alias wms_prod_to_ops='heroku pg:backups restore `heroku pg:backups public-url -a ba-wms` DATABASE_URL -a ba-wms-ops'
alias wms_prod_to_sim='heroku pg:backups restore `heroku pg:backups public-url -a ba-wms` DATABASE_URL -a ba-wms-simulation'
alias wms_prod_to_staging='heroku pg:backups restore `heroku pg:backups:public-url -a ba-wms` DATABASE_URL -a ba-wms-staging'
alias gpstaging='git push wms-staging master:master'

# deploys
alias newrelic_deployment='newrelic deployments -a wms -e production -u shaun -r `git log -n 1 --pretty=format:"%h"`'
alias rollbar_deployment='curl https://api.rollbar.com/api/1/deploy/ -F access_token=$ROLLBAR_POST_TOKEN -F environment=production -F revision=`git log -n 1 --pretty=format:"%h"` -F local_username=shaun'

#rspec
alias rspec_fails='rspec --only-failures'

# brew
alias bssp='brew services start postgresql'
alias bsstp='brew services stop postgresql'

# rails
alias rs='rails s'
alias rc='rails c'

# goba
alias prod_servers='ba ps list --environment=production --businessUnit=wms'
alias staging_servers='ba ps list --environment=staging --businessUnit=wms'
alias larae='ba exec -e production -r wms-server -b wms rails c'
